package clases;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal SALTO_DE_LINEA, COMILLAS, COMILLA_SIMPLE, TIPO_DE_DATO, CHAR, IF, ELSE, DO, WHILE, FOR, SWITCH, CASE, BREAK, CONTINUE, DEFAULT,
    TRY, CATCH, MAS, MENOS, MULTIPLICACION, DIVISION, MODULO, OP_LOGICO, PARENTESIS_ABRIR, PARENTESIS_CERRAR,
    CORCHETE_ABRIR, CORCHETE_CERRAR, LLAVE_ABRIR, LLAVE_CERRAR, OP_RELACIONAL, OP_ATRIBUCION, OP_INCRE_DECRE,
    OP_BOOLEANO, PUNTO, COMA, DOS_PUNTOS, PUNTO_Y_COMA, ASIGNACION, METODO_RESERVADO, NULL, MAIN, NUMERO,
    IDENTIFICADOR, CADENA, ERROR;
non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, If, IF_ELSE,
    While, DO_WHILE, For, SENTENCIA_BOOLEANA, SENTENCIA_FOR, Switch, SENTENCIA_SWITCH;

start with INICIO;

INICIO ::= 
    TIPO_DE_DATO MAIN PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_ABRIR SENTENCIA LLAVE_CERRAR |
    MAIN PARENTESIS_ABRIR PARENTESIS_CERRAR LLAVE_ABRIR SENTENCIA LLAVE_CERRAR
;

SENTENCIA ::= 
    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA If | 
    If |
    SENTENCIA IF_ELSE |
    IF_ELSE |
    SENTENCIA While |
    While |
    SENTENCIA DO_WHILE
    DO_WHILE |
    SENTENCIA For |
    For |
    SENTENCIA Switch |
    Switch
;

DECLARACION ::= 
    TIPO_DE_DATO IDENTIFICADOR PUNTO_Y_COMA | 
    TIPO_DE_DATO IDENTIFICADOR OP_ATRIBUCION NUMERO PUNTO_Y_COMA |
    TIPO_DE_DATO IDENTIFICADOR ASIGNACION NUMERO PUNTO_Y_COMA |
    TIPO_DE_DATO IDENTIFICADOR OP_INCRE_DECRE PUNTO_Y_COMA | 
    TIPO_DE_DATO OP_INCRE_DECRE IDENTIFICADOR PUNTO_Y_COMA | 
    TIPO_DE_DATO IDENTIFICADOR CORCHETE_ABRIR CORCHETE_CERRAR PUNTO_Y_COMA |
    TIPO_DE_DATO IDENTIFICADOR CORCHETE_ABRIR NUMERO CORCHETE_CERRAR PUNTO_Y_COMA |
    CHAR IDENTIFICADOR PUNTO_Y_COMA |
    CHAR IDENTIFICADOR ASIGNACION COMILLA_SIMPLE IDENTIFICADOR COMILLA_SIMPLE PUNTO_Y_COMA |
    CHAR IDENTIFICADOR CORCHETE_ABRIR NUMERO CORCHETE_CERRAR ASIGNACION COMILLAS IDENTIFICADOR COMILLAS PUNTO_Y_COMA |
    CHAR IDENTIFICADOR CORCHETE_ABRIR NUMERO CORCHETE_CERRAR ASIGNACION COMILLAS COMILLAS PUNTO_Y_COMA 
;

If ::= IF PARENTESIS_ABRIR SENTENCIA_BOOLEANA PARENTESIS_CERRAR LLAVE_ABRIR SENTENCIA LLAVE_CERRAR
;

SENTENCIA_BOOLEANA ::= 
    OP_BOOLEANO | 
    IDENTIFICADOR OP_RELACIONAL OP_BOOLEANO |
    IDENTIFICADOR OP_RELACIONAL NUMERO |
    IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR |
    IDENTIFICADOR OP_RELACIONAL COMILLAS COMILLAS |
    IDENTIFICADOR OP_RELACIONAL COMILLAS IDENTIFICADOR COMILLAS
;

IF_ELSE ::= IF PARENTESIS_ABRIR SENTENCIA_BOOLEANA PARENTESIS_CERRAR LLAVE_ABRIR SENTENCIA LLAVE_CERRAR ELSE LLAVE_ABRIR SENTENCIA LLAVE_CERRAR
;

While ::= WHILE PARENTESIS_ABRIR SENTENCIA_BOOLEANA PARENTESIS_CERRAR LLAVE_ABRIR SENTENCIA LLAVE_CERRAR
;

DO_WHILE ::= DO LLAVE_ABRIR SENTENCIA LLAVE_CERRAR WHILE PARENTESIS_ABRIR SENTENCIA_BOOLEANA PARENTESIS_CERRAR PUNTO_Y_COMA
;

For ::= FOR PARENTESIS_ABRIR SENTENCIA_FOR PARENTESIS_CERRAR LLAVE_ABRIR SENTENCIA LLAVE_CERRAR
;

SENTENCIA_FOR ::=
    TIPO_DE_DATO IDENTIFICADOR ASIGNACION NUMERO PUNTO_Y_COMA SENTENCIA_BOOLEANA PUNTO_Y_COMA DECLARACION_FOR |
    IDENTIFICADOR ASIGNACION NUMERO PUNTO_Y_COMA SENTENCIA_BOOLEANA PUNTO_Y_COMA DECLARACION_FOR
;

DECLARACION_FOR ::= 
    IDENTIFICADOR OP_ATRIBUCION NUMERO |
    IDENTIFICADOR OP_INCRE_DECRE | 
    OP_INCRE_DECRE IDENTIFICADOR
;

Switch ::= SWITCH PARENTESIS_ABRIR IDENTIFICADOR PARENTESIS_CERRAR LLAVE_ABRIR SENTENCIA_SWITCH LLAVE_CERRAR
;

SENTENCIA_SWITCH ::=
    CASE NUMERO DOS_PUNTOS SENTENCIA BREAK DEFAULT SENTENCIA
;